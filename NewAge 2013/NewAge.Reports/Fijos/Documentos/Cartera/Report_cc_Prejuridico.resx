<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="DataSourcePrejuridico.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="customSqlQuery1.Sql" xml:space="preserve">
    <value>--Declara variables  glcontrol
DECLARE @_empresaNumCtrl			AS VARCHAR(10)	-- Trae el Numero de control de la empresa
DECLARE @_codigoCartera			AS VARCHAR(10)	-- Trae el Codigo de cartera para la empresa actual	
DECLARE @_etapaIncumplimiento	AS VARCHAR(10)	-- Trae la Etapa Incumplimiento Cobro Pre Juridico

--Trae los consecutivos de la empresa
SELECT @_empresaNumCtrl = NumeroControl FROM glEmpresa WITH(NOLOCK) WHERE EmpresaID = @EmpresaID
SET @_codigoCartera = @_empresaNumCtrl + '16'	-- Modulo	

--Carga los datos de glControl
SELECT @_etapaIncumplimiento = Data FROM glControl WHERE glControlId = CAST(@_codigoCartera + '517' AS INT) 

declare @_perIni int 
declare @_perFin int 

set  @_perIni			= (case when @_mesIni &lt;=12 then @_mesIni else 12 end) * 100 + (case when @_mesIni &lt;=12 then 1 else 2 end)
set  @_perFin			= (case when @_mesFin &lt;=12 then @_mesFin else 12 end) * 100 + (case when @_mesFin &lt;=12 then 1 else 2 end)

SELECT 
	ine.TerceroID,
	ter.Descriptivo AS Nombre,
	CASE WHEN ine.Valor1 IS NULL THEN 0 ELSE ine.Valor1 END AS SaldoIncial,
	SdoActual.AbonoActual,
	ine.FechaINI,
	ine.FechaFIN,
	'' AS PlazoExtendido
FROM glIncumpleCambioEstado ine WITH (NOLOCK)
INNER JOIN coTercero		ter WITH (NOLOCK) ON ine.TerceroID = ter.TerceroID AND ine.eg_coTercero = ter.EmpresaGrupoID
INNER JOIN (
				SELECT 
					AbActual.Cliente,
					SUM(SdoCapital+SdoInteres+SdoCapSegu+SdoIntSegu+SdoCapCesa+SdoUtiCesa+SdoDerechos) AS AbonoActual
				FROM(
					SELECT crd.CompradorCarteraID,
					  crd.ClienteID as Cliente,
					  sum(pla.vlrCapital -   (case when (pag.AboCapital is null) then 0 else pag.AboCapital end)) as SdoCapital,
					  sum(Pla.VlrInteres -   (case when (pag.AboInteres is null) then 0 else pag.AboInteres end)) as SdoInteres,
					  sum(Pla.VlrSeguro  -   (case when (pag.AboCapSegu is null) then 0 else pag.AboCapSegu end)) as SdoCapSegu,
					  sum(Pla.VlrOtro1 -    (case when (pag.AboIntSegu is null) then 0 else pag.AboIntSegu end)) as SdoIntSegu,
					  sum(Pla.VlrCapitalCesion -  (case when (pag.AboCapCesa is null) then 0 else pag.AboCapCesa end)) as SdoCapCesa,
					  sum(Pla.VlrUtilidadCesion -  (case when (pag.AboUtiCesa is null) then 0 else pag.AboUtiCesa end)) as SdoUtiCesa,
					  sum((Pla.VlrCapitalCesion -  (case when (pag.AboCapCesa is null) then 0 else pag.AboCapCesa end)) -
					   (pla.vlrCapital -   (case when (pag.AboCapital is null) then 0 else pag.AboCapital end))) as SdoDerechos
					FROM ccCreditoPlanPagos as pla
					 left join (SELECT pag.CreditoCuotaNum,
								  SUM(vlrCapital)   as AboCapital,
								  SUM(VlrInteres)   as AboInteres,
								  SUM(VlrSeguro)   as AboCapSegu,
								  SUM(VlrOtro1)   as AboIntSegu,
								  SUM(VlrCapitalCesion)   as AboCapCesa,
								  SUM(VlrUtilidadCesion) as AboUtiCesa,
								  SUM(VlrDerechosCesion) as AboDerCesa
								FROM ccCreditoPagos pag
								group by pag.CreditoCuotaNum) as  pag ON pag.CreditoCuotaNum = pla.consecutivo
					 left join ccCreditoDocu as crd on crd.NumeroDoc = pla.NumeroDoc 
					 left join ccCliente as cli on  crd.ClienteID = cli.ClienteID and cli.EmpresaGrupoID = @EmpresaID
					where crd.EmpresaID = @EmpresaID 
					group by 
						crd.CompradorCarteraID
						,crd.ClienteID
				) AS AbActual
				GROUP BY AbActual.Cliente
			) AS SdoActual ON ine.TerceroID = SdoActual.Cliente
WHERE 
	ine.EmpresaID =  @EmpresaID 
	AND ine.EtapaIncumplimiento = @_etapaIncumplimiento
	AND ine.TerceroID = CASE WHEN @Tercero IS NULL OR @Tercero = '' THEN ine.TerceroID ELSE @Tercero END
	AND YEAR(ine.FechaINI) * 100 + MONTH (ine.FechaINI) &gt;= @_año * 100 + @_mesIni
	AND (YEAR(ine.FechaFIN) * 100 + MONTH (ine.FechaFIN) &gt; @_año * 100 + @_mesIni OR ine.FechaFIN IS NULL)
ORDER BY ine.TerceroID
</value>
  </data>
  <data name="DataSourcePrejuridico.ResultSchemaSerializable" xml:space="preserve">
    <value>PERhdGFTZXQgTmFtZT0iRGF0YVNvdXJjZVByZWp1cmlkaWNvIj48VmlldyBOYW1lPSJDdXN0b21TcWxRdWVyeSI+PEZpZWxkIE5hbWU9IlRlcmNlcm9JRCIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJOb21icmUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iU2FsZG9JbmNpYWwiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IkFib25vQWN0dWFsIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJGZWNoYUlOSSIgVHlwZT0iRGF0ZVRpbWUiIC8+PEZpZWxkIE5hbWU9IkZlY2hhRklOIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iUGxhem9FeHRlbmRpZG8iIFR5cGU9IlN0cmluZyIgLz48L1ZpZXc+PC9EYXRhU2V0Pg==</value>
  </data>
</root>