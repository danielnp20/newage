<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="QueriesDatasource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="customSqlQuery1.Sql" xml:space="preserve">
    <value>--DECLARE @EmpresaID VARCHAR(10)	= 'AVAL'		--Libranza a  consultar
--DECLARE @Libranza  int			= 25175			--Libranza a  consultar
--DECLARE @ClienteID VARCHAR(15)	= NULL	--Cliente a  consultar

SELECT	res.numeroDoc, dmv.DocumentoID,res.FechaLiquida, res.VlrPrestamo,
		(Case when dmv.Estado = 0 
			  then '*** ANULADO ***'
			  else doc.Descriptivo end) as Estado,
		left(rca.CajaID,4) + ' - ' + cast(dmv.DocumentoNro as varchar(10)) as RecCaja, 
		left(dmv.ComprobanteID,4)  + ' - ' + cast(dmv.ComprobanteIDNro as varchar(10)) as ComprNumero,
		cast(year(rca.FechaAplica) as varchar(4)) + '-' + (case when month(rca.FechaAplica) &lt;10 then '0' else '' end) +
		cast(month(rca.FechaAplica) as varchar(2)) as FechaNomina,
		(case	when (dmv.DocumentoID = '166' OR dmv.DocumentoID = '167' OR dmv.DocumentoID = '168')
				then (case	when rca.FechaConsignacion IS null 
							then dmv.Fecha else rca.FechaConsignacion end)
				else dmv.FechaDoc end) as Fecha,
	    crd.ClienteID, cli.Descriptivo as Nom_Cliente, 
		crd.PagaduriaID, pag.Descriptivo as Nom_Pagaduria,
		crd.AsesorID, ase.Descriptivo as Nom_Asesor,
		crd.VlrCuota, 
	   res.NumCredito, crd.Libranza, dmv.Descripcion, dmv.Observacion,
	   res.VlrLibranza, res.VlrAbono, res.VlrRestruc, res.VlrOtros,
crd.Plazo, pla.CtasPagadas, pla.CtasMora, crd.Plazo-pla.CtasPagadas as CtasPendientes
FROM
	(
	SELECT	NumeroDoc, NumCredito,FechaLiquida,VlrPrestamo,
			sum(VlrLibranza)	as VlrLibranza,
			sum(VlrAbono)		as VlrAbono,
			sum(VlrRestruc)		as VlrRestruc,
			sum(VlrOtros)		as VlrOtros
	FROM
		(
		SELECT	mov.NumeroDoc, mov.NumCredito,crd.FechaLiquida,crd.VlrPrestamo,
				(case when (com.TipoComponente = 1 or com.TipoComponente = 4) and 
						   doc.DocumentoID = '161'
					  then mov.VlrComponente else 0 end) as VlrLibranza,
				(case	when doc.Estado = 0 
					then 0 
					else (case	when (com.TipoComponente = 1 or com.TipoComponente = 4) and
									 Doc.DocumentoID in('166','167','168','90166','90167','90168')								then mov.VlrComponente 
								else 0 end) end) as VlrAbono,
				(case	when doc.Estado = 0 
					then 0 
					else (case	when (com.TipoComponente = 1 or com.TipoComponente = 4) and
									 Doc.DocumentoID in('180','183','184','187')
								then mov.VlrComponente 
								else 0 end) end) as VlrRestruc,
				(case when	doc.Estado = 0 and
						(com.TipoComponente &lt;&gt; 1 and com.TipoComponente &lt;&gt; 4) and
						 Doc.DocumentoID in('166','167','168')
					  then mov.VlrComponente 
					  else 0 end) as VlrOtros
		FROM ccCarteraMvto mov
				left join ccCreditoDocu		  crd with (nolock) on mov.Numcredito = crd.NumeroDoc
				left join glDocumentoControl  doc with (nolock) on mov.NumeroDoc	 = doc.NumeroDoc
				left join ccCarteraComponente com with (nolock) on mov.ComponenteCarteraID = com.ComponenteCarteraID and 
																   mov.eg_ccCarteraComponente = com.EmpresaGrupoID 
		WHERE crd.EmpresaID = @EmpresaID and 
			  ((@ClienteID is null) or (crd.ClienteID=@ClienteID)) and
			  ((@Libranza is null) or (crd.Libranza=@Libranza))
	) Mov
	GROUP BY NumeroDoc, NumCredito,FechaLiquida,VlrPrestamo
	 ) as Res 
	 left join glDocumentoControl dmv WITH (NOLOCK) on res.Numerodoc = dmv.NumeroDoc 
	 left join glDocumentoControl dcr WITH (NOLOCK) on res.Numcredito = dcr.NumeroDoc
	 left join ccCreditoDocu	  crd WITH (NOLOCK) On res.Numcredito = crd.NumeroDoc
	 left join tsReciboCajaDocu   rca WITH (NOLOCK) on res.NumeroDoc = rca.NumeroDoc
	 left join ccCliente		  cli WITH (NOLOCK) on cli.ClienteID = crd.ClienteID AND cli.EmpresaGrupoID = crd.eg_ccCliente
	 left join ccPagaduria		  pag WITH (NOLOCK) on pag.PagaduriaID = crd.PagaduriaID AND pag.EmpresaGrupoID = crd.eg_ccPagaduria
	 left join ccAsesor			  ase WITH (NOLOCK) on ase.AsesorID = crd.AsesorID AND ase.EmpresaGrupoID = crd.eg_ccAsesor
	 left join glDocumento		  doc WITH (NOLOCK) on dmv.DocumentoID = doc.DocumentoID
	 left join 
			(
			Select NumeroDoc, sum(CtasPagadas) as CtasPagadas, sum(CtasMora) as CtasMora
			from
				(
				SELECT pag.numerodoc, 
						(Case when pag.VLRPAGADOCUOTA &gt;= pag.VLRCUOTA then 1 else 0 end) as CtasPagadas,
						(Case when pag.VLRPAGADOCUOTA &lt; pag.VLRCUOTA and pag.FechaCuota &lt; GETDATE() then 1 else 0 end) as CtasMora					
				FROM CCCREDITOPLANPAGOS pag WITH (NOLOCK)
						 left join ccCreditoDocu crd WITH (NOLOCK) On pag.NumeroDoc = crd.NumeroDoc
				WHERE crd.EmpresaID = @EmpresaID and 
					  ((@ClienteID is null) or (crd.ClienteID=@ClienteID)) and
					  ((@Libranza is null) or (crd.Libranza=@Libranza))
				) tt
			group by numerodoc
			) pla on pla.NumeroDoc = crd.NumeroDoc
	where crd.EmpresaID =  @EmpresaID
		and ((@ClienteID is null) or (crd.ClienteID=@ClienteID))
		and ((@Libranza is null) or (crd.Libranza=@Libranza))


</value>
  </data>
  <data name="QueriesDatasource.ResultSchemaSerializable" xml:space="preserve">
    <value>PERhdGFTZXQgTmFtZT0iUXVlcmllc0RhdGFzb3VyY2UiPjxWaWV3IE5hbWU9IlF1ZXJ5Ij48RmllbGQgTmFtZT0ibnVtZXJvRG9jIiBUeXBlPSJJbnQzMiIgLz48RmllbGQgTmFtZT0iRG9jdW1lbnRvSUQiIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJGZWNoYUxpcXVpZGEiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJWbHJQcmVzdGFtbyIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iRXN0YWRvIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlJlY0NhamEiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iQ29tcHJOdW1lcm8iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iRmVjaGFOb21pbmEiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iRmVjaGEiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJDbGllbnRlSUQiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iTm9tX0NsaWVudGUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iUGFnYWR1cmlhSUQiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iTm9tX1BhZ2FkdXJpYSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJBc2Vzb3JJRCIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJOb21fQXNlc29yIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlZsckN1b3RhIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJOdW1DcmVkaXRvIiBUeXBlPSJJbnQzMiIgLz48RmllbGQgTmFtZT0iTGlicmFuemEiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iRGVzY3JpcGNpb24iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iT2JzZXJ2YWNpb24iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iVmxyTGlicmFuemEiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IlZsckFib25vIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJWbHJSZXN0cnVjIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJWbHJPdHJvcyIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iUGxhem8iIFR5cGU9IkludDE2IiAvPjxGaWVsZCBOYW1lPSJDdGFzUGFnYWRhcyIgVHlwZT0iSW50MzIiIC8+PEZpZWxkIE5hbWU9IkN0YXNNb3JhIiBUeXBlPSJJbnQzMiIgLz48RmllbGQgTmFtZT0iQ3Rhc1BlbmRpZW50ZXMiIFR5cGU9IkludDMyIiAvPjwvVmlldz48L0RhdGFTZXQ+</value>
  </data>
</root>