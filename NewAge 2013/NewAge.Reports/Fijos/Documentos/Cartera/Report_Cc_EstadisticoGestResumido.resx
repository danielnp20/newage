<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="QueriesDatasource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="customSqlQuery1.Sql" xml:space="preserve">
    <value>
Declare @total int = 0;
SELECT @total = COUNT(*) 
from ccCierreDiaCartera cie WITH (NOLOCK)
 left join ccCreditoDocu crd on cie.NumeroDoc = crd.NumeroDoc
 left join ccCobranzaGestion ges WITH (NOLOCK) on cie.CobranzaGestionID =ges.CobranzaGestionID and cie.eg_ccCobranzaGestion = ges.EmpresaGrupoID
where cie.EmpresaID = @EmpresaID and cast(Fecha as DATE) = @FechaCorte and FechaMora is not null and FechaMora &lt; @FechaCorte and  cie.saldoVencido &gt; 0 and 
  crd.TipoEstado &lt;=2  and ((@Etapa is null) or (ges.EtapaIncumplimiento=@Etapa))

select ROUND((Cantidad/Total1)*100,2) as Total,Agrupamiento,Grupo, orden, Cantidad,Cant0,Cant1,Cant2,Cant3,Cant4,Cant5,Cant6,CantM  from (
select cast(@total as numeric(10,2)) As Total1, Agrupamiento, Grupo, orden, SUM(1)  as Cantidad,
   sum(Case when MesesVenc = 0 then 1 else 0 end) as Cant0,
   sum(case when MesesVenc = 1 then 1 else 0 end) as Cant1,
   sum(case when MesesVenc = 2 then 1 else 0 end) as Cant2,
   sum(case when MesesVenc = 3 then 1 else 0 end) as Cant3,
   sum(case when MesesVenc = 4 then 1 else 0 end) as Cant4,
   sum(case when MesesVenc = 5 then 1 else 0 end) as Cant5,
   sum(case when MesesVenc = 6 then 1 else 0 end) as Cant6,
   sum(case when MesesVenc &gt; 6 then 1 else 0 end) as CantM
from
(
	select Case When cie.orden  &lt;=  12 Then  1 Else 2 End as Agrupamiento,  cie.Grupo, cie.MesesVenc, cie.NumeroDoc, crd.libranza as Credito, cie.cantidad, cie.SaldoVencido, 
	  crd.ClienteID, cli.descriptivo as Nombre, cie.FechaMora,cie.Etapa, cie.gestion, crd.TipoEstado, cie.DiasMora, cie.orden
	from 
		 (
			 select cie.NumeroDoc, cie.FechaMora, cie.Altura, cie.CobranzaGestionID as Gestion, ges.EtapaIncumplimiento as Etapa, 1 as Cantidad,  cie.SaldoVencido, diasMora, 
			   (case when cie.Altura &lt;=12     then 'CUOTA ' + cast(cie.Altura AS varchar(10)) else
			   (Case when cie.Altura &gt; 12 and cie.Altura &lt;= 24 then 'CUOTA 13 a 24'  else
			   (Case when cie.Altura &gt; 24 and cie.Altura &lt;= 36 then 'CUOTA 25 a 36'  else '&gt;a CUOTA 36' end) end) end) as Grupo,
			   (case when cie.Altura &lt;=12      then cie.Altura else
			   (Case when cie.Altura &gt; 12 and cie.Altura &lt;= 24 then 13 else
			   (Case when cie.Altura &gt; 24 and cie.Altura &lt;= 36 then 14  else 15 end) end) end) as Orden,
			   DATEDIFF(MONTH, cie.fechaMora,@FechaCorte) as MesesVenc 
			 from ccCierreDiaCartera cie WITH (NOLOCK)
			  left join ccCobranzaGestion ges WITH (NOLOCK) on cie.CobranzaGestionID =ges.CobranzaGestionID and cie.eg_ccCobranzaGestion = ges.EmpresaGrupoID
			 where cie.EmpresaID =  @EmpresaID and cast(Fecha as DATE) = @FechaCorte and FechaMora is not null and FechaMora &lt;= @FechaCorte and  cie.saldoVencido &gt; 0 and ges.EtapaIncumplimiento is not null
		 ) cie
	left join ccCreditoDocu crd  WITH (NOLOCK) on cie.NumeroDoc = crd.NumeroDoc
	left join ccCliente cli   WITH (NOLOCK) on crd.ClienteID =cli.ClienteID and crd.eg_ccCliente=cli.EmpresaGrupoID
	where crd.TipoEstado &lt;=2  and ((@Etapa is null) or (cie.Etapa=@Etapa))
	--order by cie.orden, cie.MesesVenc
) ccc
group by Agrupamiento, Grupo, orden
) qr
order by qr.orden
</value>
  </data>
  <data name="QueriesDatasource.ResultSchemaSerializable" xml:space="preserve">
    <value>PERhdGFTZXQgTmFtZT0iUXVlcmllc0RhdGFzb3VyY2UiPjxWaWV3IE5hbWU9IkVzdGFkaXN0aWNvUmVzdW1pZG8iPjxGaWVsZCBOYW1lPSJUb3RhbCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iQWdydXBhbWllbnRvIiBUeXBlPSJJbnQzMiIgLz48RmllbGQgTmFtZT0iR3J1cG8iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0ib3JkZW4iIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJDYW50aWRhZCIgVHlwZT0iSW50MzIiIC8+PEZpZWxkIE5hbWU9IkNhbnQwIiBUeXBlPSJJbnQzMiIgLz48RmllbGQgTmFtZT0iQ2FudDEiIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJDYW50MiIgVHlwZT0iSW50MzIiIC8+PEZpZWxkIE5hbWU9IkNhbnQzIiBUeXBlPSJJbnQzMiIgLz48RmllbGQgTmFtZT0iQ2FudDQiIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJDYW50NSIgVHlwZT0iSW50MzIiIC8+PEZpZWxkIE5hbWU9IkNhbnQ2IiBUeXBlPSJJbnQzMiIgLz48RmllbGQgTmFtZT0iQ2FudE0iIFR5cGU9IkludDMyIiAvPjwvVmlldz48L0RhdGFTZXQ+</value>
  </data>
</root>