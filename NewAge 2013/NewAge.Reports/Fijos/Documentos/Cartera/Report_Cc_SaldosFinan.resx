<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="QueriesDataSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="customSqlQuery1.Sql" xml:space="preserve">
    <value>SELECT res.NumeroDoc, res.ConcesionarioID, res.AsesorID,
       res.LineaCreditoID, res.PagaduriaID, res.CompradorCarteraID,
       res.CompradorDesc, res.Obligacion, res.Cliente, res.Nombre,
       res.SdoCapital, res.SdoInteres, res.SdoCapSegu, res.SdoIntSegu
  from (SELECT (case when crd.TipoEstado in (3, 4,
       5) then 'COBRO JUR.' else (case when crd.CompradorCarteraID is null then '000' else rtrim (crd.CompradorCarteraID) end) end)
       as CompradorCarteraID, (case when crd.TipoEstado in (3, 4,
       5) then '   ' else (case when compr.Descriptivo is null then 'CARTERA PROPIA' else rtrim (compr.Descriptivo) end) end)
       as CompradorDesc, crd.Libranza as Obligacion, crd.ClienteID
       as Cliente,
       (case when crd.TipoEstado &lt; = 2 then '1' else '0' end)
       as TipoEstado, crd.LineaCreditoID, crd.ConcesionarioID,
       crd.AsesorID, crd.PagaduriaID, cli.Descriptivo as Nombre,
       pla.NumeroDoc,
       sum (pla.vlrCapital - (case when (pag.AboCapital is null) then 0 else pag.AboCapital end))
       as SdoCapital,
       sum (Pla.VlrInteres - (case when (pag.AboInteres is null) then 0 else pag.AboInteres end))
       as SdoInteres,
       sum (Pla.VlrSeguro - (case when (pag.AboCapSegu is null) then 0 else pag.AboCapSegu end))
       as SdoCapSegu,
       sum (Pla.VlrOtro1 - (case when (pag.AboIntSegu is null) then 0 else pag.AboIntSegu end))
       as SdoIntSegu,
       sum (pla.VlrOtrosfijos - (case when (pag.AboOtrFijo is null) then 0 else pag.AboOtrFijo end))
       as SdoOtrFijo,
       sum (Pla.VlrCapitalCesion - (case when (pag.AboCapCesa is null) then 0 else pag.AboCapCesa end))
       as SdoCapCesa,
       sum (Pla.VlrUtilidadCesion - (case when (pag.AboUtiCesa is null) then 0 else pag.AboUtiCesa end))
       as SdoUtiCesa,
       sum (Pla.VlrderechosCesion - (case when (pag.AboDerCesa is null) then 0 else pag.AboDerCesa end))
       as SdoDerechos FROM ccCreditoPlanPagos (nolock) as pla
  left join (SELECT pag.CreditoCuotaNum, SUM (vlrCapital)
       as AboCapital, SUM (VlrInteres) as AboInteres, SUM (VlrSeguro)
       as AboCapSegu, SUM (VlrOtro1) as AboIntSegu,
       SUM (VlrOtrosfijos) as AboOtrFijo, SUM (VlrCapitalCesion)
       as AboCapCesa, SUM (VlrUtilidadCesion) as AboUtiCesa,
       SUM (VlrDerechosCesion)
       as AboDerCesa FROM ccCreditoPagos (nolock) pag group by pag.CreditoCuotaNum)
       as pag ON pag.CreditoCuotaNum = pla.consecutivo
  left join ccCreditoDocu (nolock) as crd
       on crd.NumeroDoc = pla.NumeroDoc
  left join ccCliente (nolock) as cli on crd.ClienteID = cli.ClienteID
       and cli.EmpresaGrupoID = @EmpresaID
  left join ccCompradorCartera (nolock) as compr
       on crd.CompradorCarteraID = compr.CompradorCarteraID
       and compr.EmpresaGrupoID = crd.eg_ccCompradorCartera
 where crd.EmpresaID = @EmpresaID
   and crd.TipoEstado&lt; 6 and ((@ClienteID is null)    or (crd.ClienteID=@ClienteID))
   and ((@Libranza is null)    or (crd.Libranza=@Libranza))
   and ((@ZonaID is null)    or (crd.ZonaID=@ZonaID))
   and ((@Ciudad is null)    or (crd.Ciudad=@Ciudad))
   and ((@ConcesionarioID is null)  or (crd.ConcesionarioID=@ConcesionarioID))
   and ((@AsesorID is null)    or (crd.AsesorID=@AsesorID))
   and ((@LineaCreditoID is null)  or (crd.LineaCreditoID=@LineaCreditoID))
   and ((@CompradorCarteraID is null) or (crd.CompradorCarteraID=@CompradorCarteraID))
group by crd.CompradorCarteraID
	,compr.Descriptivo
  ,crd.Libranza
  ,crd.ClienteID
  ,cli.EmpleadoCodigo
  ,crd.PagaduriaID
  ,crd.TipoEstado
  ,crd.LineaCreditoID
  ,crd.AsesorID
  ,crd.ConcesionarioID
  ,cli.Descriptivo
  ,pla.NumeroDoc
) Res 
where (SdoCapital &gt; 0 or SdoCapSegu &gt; 0) -- and CompradorCarteraID = '000'
order by CompradorCarteraID, nombre, Obligacion</value>
  </data>
  <data name="QueriesDataSource.ResultSchemaSerializable" xml:space="preserve">
    <value>PERhdGFTZXQgTmFtZT0iUXVlcmllc0RhdGFTb3VyY2UiPjxWaWV3IE5hbWU9IlF1ZXJ5U2FsZG9zIj48RmllbGQgTmFtZT0iTnVtZXJvRG9jIiBUeXBlPSJJbnQzMiIgLz48RmllbGQgTmFtZT0iQ29uY2VzaW9uYXJpb0lEIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkFzZXNvcklEIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkxpbmVhQ3JlZGl0b0lEIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlBhZ2FkdXJpYUlEIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkNvbXByYWRvckNhcnRlcmFJRCIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJDb21wcmFkb3JEZXNjIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9Ik9ibGlnYWNpb24iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iQ2xpZW50ZSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJOb21icmUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iU2RvQ2FwaXRhbCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iU2RvSW50ZXJlcyIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iU2RvQ2FwU2VndSIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iU2RvSW50U2VndSIgVHlwZT0iRGVjaW1hbCIgLz48L1ZpZXc+PC9EYXRhU2V0Pg==</value>
  </data>
</root>