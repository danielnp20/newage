<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictPassword.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>